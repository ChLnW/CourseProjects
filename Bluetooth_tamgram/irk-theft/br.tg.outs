maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case DisplayOnly_Mitm_Irk_68_manyto55tomany_case_3
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case DisplayOnly_Mitm_Irk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case DisplayOnly_Mitm_Irk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case DisplayOnly_Mitm_Irk_68_manyto55tomany_case_3
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_Mitm_Irk_68_manyto57
    solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
      case DisplayOnly_Mitm_Irk_68_55to56to57
      SOLVED // trace found
    qed
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) DisplayOnly_Mitm_Irk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'True', 'DisplayOnly', 'True', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_Irk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): falsified - found trace (5 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_1
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_Irk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_2
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_Irk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_3
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_Irk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_4
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_Irk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_5
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_Irk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_6
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_Irk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_7
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_Irk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_8
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_Irk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_1
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
        case DisplayYesNo_Mitm_Irk_68_55to56to57
        by contradiction /* cyclic */
      qed
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_2
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
        case DisplayYesNo_Mitm_Irk_68_55to56to57
        by contradiction /* cyclic */
      qed
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_3
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
        case DisplayYesNo_Mitm_Irk_68_55to56to57
        by contradiction /* cyclic */
      qed
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_4
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
        case DisplayYesNo_Mitm_Irk_68_55to56to57
        by contradiction /* cyclic */
      qed
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_5
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
        case DisplayYesNo_Mitm_Irk_68_55to56to57
        by contradiction /* cyclic */
      qed
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_6
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
        case DisplayYesNo_Mitm_Irk_68_55to56to57
        by contradiction /* cyclic */
      qed
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_7
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
        case DisplayYesNo_Mitm_Irk_68_55to56to57
        by contradiction /* cyclic */
      qed
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_Irk_68_manyto55tomany_case_8
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_Irk_68_manyto57
      solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
        case DisplayYesNo_Mitm_Irk_68_55to56to57
        by contradiction /* cyclic */
      qed
    next
      case DisplayYesNo_Mitm_Irk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) DisplayYesNo_Mitm_Irk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'True', 'DisplayYesNo', 'True', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_Irk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): verified (50 steps)
  IRKTheftProofCareful (all-traces): verified (50 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case KeyboardOnly_Mitm_Irk_68_manyto55tomany_case_7
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case KeyboardOnly_Mitm_Irk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case KeyboardOnly_Mitm_Irk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case KeyboardOnly_Mitm_Irk_68_manyto55tomany_case_7
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case KeyboardOnly_Mitm_Irk_68_manyto57
    solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
      case KeyboardOnly_Mitm_Irk_68_55to56to57
      SOLVED // trace found
    qed
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) KeyboardOnly_Mitm_Irk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'True', 'KeyboardOnly', 'True', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_Irk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): falsified - found trace (5 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case NoInputNoOutput_Mitm_Irk_68_manyto55tomany_case_1
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case NoInputNoOutput_Mitm_Irk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case NoInputNoOutput_Mitm_Irk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case NoInputNoOutput_Mitm_Irk_68_manyto55tomany_case_1
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_Mitm_Irk_68_manyto57
    solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
      case NoInputNoOutput_Mitm_Irk_68_55to56to57
      SOLVED // trace found
    qed
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'True', 'NoInputNoOutput', 'True', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_Irk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): falsified - found trace (5 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case DisplayOnly_NoMitm_Irk_68_manyto55tomany_case_2
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case DisplayOnly_NoMitm_Irk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case DisplayOnly_NoMitm_Irk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case DisplayOnly_NoMitm_Irk_68_manyto55tomany_case_2
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_NoMitm_Irk_68_manyto57
    solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
      case DisplayOnly_NoMitm_Irk_68_55to56to57
      SOLVED // trace found
    qed
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) DisplayOnly_NoMitm_Irk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'True', 'DisplayOnly', 'False', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_Irk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): falsified - found trace (5 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case DisplayYesNo_NoMitm_Irk_68_manyto55tomany_case_5
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case DisplayYesNo_NoMitm_Irk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case DisplayYesNo_NoMitm_Irk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case DisplayYesNo_NoMitm_Irk_68_manyto55tomany_case_5
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayYesNo_NoMitm_Irk_68_manyto57
    solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
      case DisplayYesNo_NoMitm_Irk_68_55to56to57
      SOLVED // trace found
    qed
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'True', 'DisplayYesNo', 'False', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_Irk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): falsified - found trace (5 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case KeyboardOnly_NoMitm_Irk_68_manyto55tomany_case_4
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case KeyboardOnly_NoMitm_Irk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case KeyboardOnly_NoMitm_Irk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case KeyboardOnly_NoMitm_Irk_68_manyto55tomany_case_4
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case KeyboardOnly_NoMitm_Irk_68_manyto57
    solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
      case KeyboardOnly_NoMitm_Irk_68_55to56to57
      SOLVED // trace found
    qed
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'True', 'KeyboardOnly', 'False', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_Irk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): falsified - found trace (5 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case NoInputNoOutput_NoMitm_Irk_68_manyto55tomany_case_1
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case NoInputNoOutput_NoMitm_Irk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case NoInputNoOutput_NoMitm_Irk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case NoInputNoOutput_NoMitm_Irk_68_manyto55tomany_case_1
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_NoMitm_Irk_68_manyto57
    solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
      case NoInputNoOutput_NoMitm_Irk_68_55to56to57
      SOLVED // trace found
    qed
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'True', 'NoInputNoOutput', 'False', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_Irk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): falsified - found trace (5 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case DisplayOnly_Mitm_NoIrk_68_manyto55tomany_case_3
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case DisplayOnly_Mitm_NoIrk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case DisplayOnly_Mitm_NoIrk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case DisplayOnly_Mitm_NoIrk_68_manyto55tomany_case_1
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayOnly_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayOnly_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayOnly_Mitm_NoIrk_68_manyto55tomany_case_2
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayOnly_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayOnly_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayOnly_Mitm_NoIrk_68_manyto55tomany_case_3
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayOnly_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case DisplayOnly_Mitm_NoIrk_68_manyto55tomany_case_4
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayOnly_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case DisplayOnly_Mitm_NoIrk_68_manyto55tomany_case_5
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayOnly_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case DisplayOnly_Mitm_NoIrk_68_manyto55tomany_case_6
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayOnly_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case DisplayOnly_Mitm_NoIrk_68_manyto55tomany_case_7
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayOnly_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case DisplayOnly_Mitm_NoIrk_68_manyto55tomany_case_8
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayOnly_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'False', 'DisplayOnly', 'True', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_Mitm_NoIrk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): verified (30 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_1
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_NoIrk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_2
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_NoIrk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_3
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_NoIrk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_4
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_NoIrk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_5
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_NoIrk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_6
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_NoIrk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_7
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_NoIrk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_8
  solve( (#vr.1 = #i_51)  ∥ (#i_51 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_51 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
        case DisplayYesNo_Mitm_NoIrk_68_55to58to59
        by contradiction /* cyclic */
      qed
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_1
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_2
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_3
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_4
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_5
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_6
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_7
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_Mitm_NoIrk_68_manyto55tomany_case_8
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'False', 'DisplayYesNo', 'True', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_Mitm_NoIrk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): verified (50 steps)
  IRKTheftProofCareful (all-traces): verified (42 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case KeyboardOnly_Mitm_NoIrk_68_manyto55tomany_case_7
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case KeyboardOnly_Mitm_NoIrk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case KeyboardOnly_Mitm_NoIrk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case KeyboardOnly_Mitm_NoIrk_68_manyto55tomany_case_1
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case KeyboardOnly_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case KeyboardOnly_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case KeyboardOnly_Mitm_NoIrk_68_manyto55tomany_case_2
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case KeyboardOnly_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case KeyboardOnly_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case KeyboardOnly_Mitm_NoIrk_68_manyto55tomany_case_3
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case KeyboardOnly_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case KeyboardOnly_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case KeyboardOnly_Mitm_NoIrk_68_manyto55tomany_case_4
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case KeyboardOnly_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case KeyboardOnly_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case KeyboardOnly_Mitm_NoIrk_68_manyto55tomany_case_5
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case KeyboardOnly_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case KeyboardOnly_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case KeyboardOnly_Mitm_NoIrk_68_manyto55tomany_case_6
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case KeyboardOnly_Mitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case KeyboardOnly_Mitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case KeyboardOnly_Mitm_NoIrk_68_manyto55tomany_case_7
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case KeyboardOnly_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case KeyboardOnly_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case KeyboardOnly_Mitm_NoIrk_68_manyto55tomany_case_8
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case KeyboardOnly_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case KeyboardOnly_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'False', 'KeyboardOnly', 'True', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_Mitm_NoIrk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): verified (38 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case NoInputNoOutput_Mitm_NoIrk_68_manyto55tomany_case_1
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case NoInputNoOutput_Mitm_NoIrk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case NoInputNoOutput_Mitm_NoIrk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case NoInputNoOutput_Mitm_NoIrk_68_manyto55tomany_case_1
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_Mitm_NoIrk_68_manyto55tomany_case_2
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_Mitm_NoIrk_68_manyto55tomany_case_3
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_Mitm_NoIrk_68_manyto55tomany_case_4
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_Mitm_NoIrk_68_manyto55tomany_case_5
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_Mitm_NoIrk_68_manyto55tomany_case_6
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_Mitm_NoIrk_68_manyto55tomany_case_7
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_Mitm_NoIrk_68_manyto55tomany_case_8
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_Mitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_Mitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'False', 'NoInputNoOutput', 'True', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_Mitm_NoIrk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): verified (26 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case DisplayOnly_NoMitm_NoIrk_68_manyto55tomany_case_2
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case DisplayOnly_NoMitm_NoIrk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case DisplayOnly_NoMitm_NoIrk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case DisplayOnly_NoMitm_NoIrk_68_manyto55tomany_case_1
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayOnly_NoMitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayOnly_NoMitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayOnly_NoMitm_NoIrk_68_manyto55tomany_case_2
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayOnly_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case DisplayOnly_NoMitm_NoIrk_68_manyto55tomany_case_3
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayOnly_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case DisplayOnly_NoMitm_NoIrk_68_manyto55tomany_case_4
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayOnly_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case DisplayOnly_NoMitm_NoIrk_68_manyto55tomany_case_5
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayOnly_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayOnly_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'False', 'DisplayOnly', 'False', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayOnly_NoMitm_NoIrk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): verified (19 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case DisplayYesNo_NoMitm_NoIrk_68_manyto55tomany_case_5
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case DisplayYesNo_NoMitm_NoIrk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case DisplayYesNo_NoMitm_NoIrk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case DisplayYesNo_NoMitm_NoIrk_68_manyto55tomany_case_1
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_NoMitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_NoMitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_NoMitm_NoIrk_68_manyto55tomany_case_2
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_NoMitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_NoMitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_NoMitm_NoIrk_68_manyto55tomany_case_3
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_NoMitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_NoMitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_NoMitm_NoIrk_68_manyto55tomany_case_4
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case DisplayYesNo_NoMitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case DisplayYesNo_NoMitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case DisplayYesNo_NoMitm_NoIrk_68_manyto55tomany_case_5
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case DisplayYesNo_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case DisplayYesNo_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'False', 'DisplayYesNo', 'False', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) DisplayYesNo_NoMitm_NoIrk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): verified (25 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case KeyboardOnly_NoMitm_NoIrk_68_manyto55tomany_case_4
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case KeyboardOnly_NoMitm_NoIrk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case KeyboardOnly_NoMitm_NoIrk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case KeyboardOnly_NoMitm_NoIrk_68_manyto55tomany_case_1
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case KeyboardOnly_NoMitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case KeyboardOnly_NoMitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case KeyboardOnly_NoMitm_NoIrk_68_manyto55tomany_case_2
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case KeyboardOnly_NoMitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case KeyboardOnly_NoMitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case KeyboardOnly_NoMitm_NoIrk_68_manyto55tomany_case_3
  solve( (#vr.1 = #i_56)  ∥ (#i_56 < #vr.1) )
    case case_1
    by solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
  next
    case case_2
    solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
      case KeyboardOnly_NoMitm_NoIrk_68_manyto57
      by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
    next
      case KeyboardOnly_NoMitm_NoIrk_68_manyto59
      by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
    qed
  qed
next
  case KeyboardOnly_NoMitm_NoIrk_68_manyto55tomany_case_4
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case KeyboardOnly_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case KeyboardOnly_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case KeyboardOnly_NoMitm_NoIrk_68_manyto55tomany_case_5
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case KeyboardOnly_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case KeyboardOnly_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'False', 'KeyboardOnly', 'False', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) KeyboardOnly_NoMitm_NoIrk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): verified (23 steps)

==============================================================================
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory tmp_br begin

// Function signature and definition of the equational theory E

functions: fst/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



restriction tg_cell_neq_restriction:
  "¬(∃ x_70 #i_69. TgCellNeq( x_70, x_70 ) @ #i_69)"
  // safety formula

lemma IRKTheftProofCareless:
  all-traces
  "∀ pid #i_51 #k_52.
    ((Distribute_IdKey_42( pid ) @ #i_51) ∧
     (Careless_Implementation_44( pid ) @ #k_52)) ⇒
    (∃ #j_53. (User_Confirmation_41( pid ) @ #j_53) ∧ (#j_53 < #i_51))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_51 #k_52.
  (Distribute_IdKey_42( pid ) @ #i_51) ∧
  (Careless_Implementation_44( pid ) @ #k_52)
 ∧
  ∀ #j_53. (User_Confirmation_41( pid ) @ #j_53) ⇒ ¬(#j_53 < #i_51)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_52 )
  case NoInputNoOutput_NoMitm_NoIrk_68_manyto55tomany_case_1
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_51 )
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto59
    solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_51 )
      case NoInputNoOutput_NoMitm_NoIrk_68_55to58to59
      SOLVED // trace found
    qed
  qed
qed

lemma IRKTheftProofCareful:
  all-traces
  "∀ pid #i_56 #k_57.
    ((Distribute_IdKey_42( pid ) @ #i_56) ∧
     (Careful_Implementation_43( pid ) @ #k_57)) ⇒
    (∃ #j_58. (User_Confirmation_41( pid ) @ #j_58) ∧ (#j_58 < #i_56))"
/*
guarded formula characterizing all counter-examples:
"∃ pid #i_56 #k_57.
  (Distribute_IdKey_42( pid ) @ #i_56) ∧
  (Careful_Implementation_43( pid ) @ #k_57)
 ∧
  ∀ #j_58. (User_Confirmation_41( pid ) @ #j_58) ⇒ ¬(#j_58 < #i_56)"
*/
simplify
solve( StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, pid.1>
       ) ▶₀ #k_57 )
  case NoInputNoOutput_NoMitm_NoIrk_68_manyto55tomany_case_1
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_NoMitm_NoIrk_68_manyto55tomany_case_2
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_NoMitm_NoIrk_68_manyto55tomany_case_3
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_NoMitm_NoIrk_68_manyto55tomany_case_4
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
next
  case NoInputNoOutput_NoMitm_NoIrk_68_manyto55tomany_case_5
  solve( Distribute_IdKey_42( ~id_67 ) @ #i_56 )
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto57
    by solve( StF( ~pid, 'tgk57', <'True', 'True', ~id_67> ) ▶₀ #i_56 )
  next
    case NoInputNoOutput_NoMitm_NoIrk_68_manyto59
    by solve( StF( ~pid, 'tgk59', <'True', ~id_67> ) ▶₀ #i_56 )
  qed
qed

restriction either_careless_or_careful:
  "(∀ pid #i_61.
     (Careful_Implementation_43( pid ) @ #i_61) ⇒
     (¬(∃ #j_62. Careless_Implementation_44( pid ) @ #j_62))) ∧
   (∀ pid #i_64.
     (Careless_Implementation_44( pid ) @ #i_64) ⇒
     (¬(∃ #j_65. Careful_Implementation_43( pid ) @ #j_65)))"
  // safety formula

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_0to1:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk1', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_manyto1to2:
   [ StF( ~pid, 'tgk1', 'empty_tuple' ), Fr( ~id_67 ) ]
  -->
   [ StF( ~pid, 'tgk2', <'False', 'NoInputNoOutput', 'False', ~id_67> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_manyto2to3:
   [
   StF( ~pid, 'tgk2',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   Out( <'Pairing_Request', tgc_idkey_0, tgc_mitm_0, tgc_iocap_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_manyto3tomany:
   [
   StF( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_mitm_0, tgc_process_id_0>
   ),
   In( <'Pairing_Response', idkey_48, mitm_46, iocap_47> )
   ]
  -->
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, iocap_47, idkey_48, tgc_mitm_0, mitm_46, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_3to4to47:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'False', 
         'False', tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_3to5tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 'True', 
         tgc_mitm_b_0, tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_5to6tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_6to7to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_6to8to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_6to9to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_6to10to47:
   [
   StB( ~pid, 'tgk6',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_5to11tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_11to12to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_11to13to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_11to14to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_11to15to47:
   [
   StB( ~pid, 'tgk11',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_5to16tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_16to17to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_16to18to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_16to19to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_16to20to47:
   [
   StB( ~pid, 'tgk16',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_5to21tomany:
   [
   StB( ~pid, 'tgk5',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_21to22to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_21to23to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_21to24to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_21to25to47:
   [
   StB( ~pid, 'tgk21',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_3to26tomany:
   [
   StB( ~pid, 'tgk3',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, tgc_mitm_0, 
         'True', tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, tgc_iocap_b_0, tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_26to27tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_27to28to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_27to29to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_27to30to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_27to31to47:
   [
   StB( ~pid, 'tgk27',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_26to32tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'DisplayYesNo', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_32to33to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_32to34to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Numeric_Comparison'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_32to35to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBD'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_32to36to47:
   [
   StB( ~pid, 'tgk32',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_26to37tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'KeyboardOnly', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_37to38to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_37to39to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_ADBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_37to40to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Passkey_Entry_AIBI'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_37to41to47:
   [
   StB( ~pid, 'tgk37',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_26to42tomany:
   [
   StB( ~pid, 'tgk26',
        <tgc_idkey_0, tgc_iocap_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, 
         tgc_process_id_0>
   )
   ]
  -->
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, tgc_iocap_0, tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_42to43to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_42to44to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'DisplayYesNo', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_AC'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_42to45to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'KeyboardOnly', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_42to46to47:
   [
   StB( ~pid, 'tgk42',
        <tgc_idkey_0, 'NoInputNoOutput', tgc_irk_a_rsp_0, tgc_process_id_0>
   )
   ]
  -->
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_47to48tomany:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works' ) ]->
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_47to49to54:
   [
   St( ~pid, 'tgk47',
       <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_48to50to52:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, tgc_protocol_0>
   )
   ]
  --[ TgCellNeq( tgc_protocol_0, 'Just_Works_BC' ) ]->
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_48to51to53:
   [
   StB( ~pid, 'tgk48',
        <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0, 'Just_Works_BC'>
   )
   ]
  -->
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_manyto52to55:
   [ StF( ~pid, 'tgk52', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ User_Confirmation_41( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_manyto53to55:
   [ StF( ~pid, 'tgk53', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_manyto54to55:
   [ StF( ~pid, 'tgk54', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_manyto55tomany:
   [ StF( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  -->
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_55to56to57:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careful_Implementation_43( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk57', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_55to58to59:
   [ StB( ~pid, 'tgk55', <tgc_idkey_0, tgc_irk_a_rsp_0, tgc_process_id_0> )
   ]
  --[ Careless_Implementation_44( tgc_process_id_0 ) ]->
   [ StF( ~pid, 'tgk59', <tgc_irk_a_rsp_0, tgc_process_id_0> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_manyto57:
   [ StF( ~pid, 'tgk57', <'True', 'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) NoInputNoOutput_NoMitm_NoIrk_68_manyto59:
   [ StF( ~pid, 'tgk59', <'True', tgc_process_id_0> ) ]
  --[ Distribute_IdKey_42( tgc_process_id_0 ) ]->
   [ ]

  /* has exactly the trivial AC variant */

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: ./tmp/tmp_br.tg.spthy

  IRKTheftProofCareless (all-traces): falsified - found trace (5 steps)
  IRKTheftProofCareful (all-traces): verified (17 steps)

==============================================================================
